name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: blog
          POSTGRES_PASSWORD: blog
          POSTGRES_DB: blog
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U blog"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo, pdo_pgsql
          coverage: none

      - name: Get Composer Cache
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U blog; do
            echo "Waiting for PostgreSQL..."
            sleep 5
          done

      - name: Create Test Database
        env:
          PGPASSWORD: blog
        run: |
          psql -h localhost -U blog -c "CREATE DATABASE blog_test;"

      - name: Run Doctrine Migrations
        run: php bin/console doctrine:migrations:migrate --env=test --no-interaction

      - name: Load Fixtures
        run: php bin/console doctrine:fixtures:load --env=test --no-interaction

      - name: Run PHPUnit
        run: vendor/bin/phpunit --configuration tests/phpunit.xml --migrate-configuration --dont-report-useless-tests
