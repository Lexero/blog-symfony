imports:
    - { resource: packages/cronos.yml }

parameters:
    app_url: '%env(APP_ENV)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Enum/'

    Cocur\Slugify\SlugifyInterface:
        alias: 'cocur_slugify'

    App\Tests\DataFixtures\PostFixtures:
        tags: ['doctrine.fixture.orm']

    App\Tests\DataFixtures\AdminFixtures:
        tags: ['doctrine.fixture.orm']

    Redis:
        class: \Redis
        calls:
            - method: connect
              arguments: [ '%env(REDIS_HOST)%', '%env(REDIS_PORT)%' ]
            - method: select
              arguments: [ '%env(REDIS_DATABASE)%' ]

    App\EventSubscriber\MigrationEventSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    Faker\Generator:
        factory: [ 'Faker\Factory', 'create' ]
        arguments: [ 'en_US' ]
