security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: bcrypt

    role_hierarchy:
        !php/enum App\Enum\UserRoleEnum::ROLE_WRITER->value: [ !php/enum App\Enum\UserRoleEnum::ROLE_READER->value, !php/enum App\Enum\UserRoleEnum::ROLE_ADMIN->value ]
        !php/enum App\Enum\UserRoleEnum::ROLE_READER->value: [ !php/enum App\Enum\UserRoleEnum::ROLE_USER->value ]

    enable_authenticator_manager: true

    providers:
        user:
            entity:
                class: App\Entity\User
                property: email
        hwi:
            id: App\Security\OAuthUserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin
            form_login:
                provider: user
                check_path: admin_login
                login_path: admin_login
                default_target_path: sonata_admin_dashboard
            logout:
                path: admin_logout
                target: admin_login
        main:
            lazy: false
            entry_point: form_login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 86400
                always_remember_me: true
            form_login:
                provider: user
                login_path: app_login
                check_path: app_login
                default_target_path: app_main
            logout:
                path: app_logout
                target: app_login
            user_checker: App\Security\VerificationUserChecker
            oauth:
                login_path: hwi_oauth_connect
                failure_path: hwi_oauth_connect
                check_path: hwi_oauth_connect
                default_target_path: app_main
                use_forward: false
                resource_owners:
                    google: google_oauth_login
                    github: github_oauth_login
                oauth_user_provider:
                    service: App\Security\OAuthUserProvider
                provider: hwi

    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/_profiler, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/registration, roles: PUBLIC_ACCESS }
        - { path: ^/verify/email, roles: PUBLIC_ACCESS }
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/oauth, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: !php/enum App\Enum\UserRoleEnum::ROLE_ADMIN->value }
        - { path: ^/posts, roles: !php/enum App\Enum\UserRoleEnum::ROLE_READER->value }
        - { path: ^/, roles: !php/enum App\Enum\UserRoleEnum::ROLE_READER->value }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: bcrypt
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
